---

import '../styles/main.css'

import Monoton from '../components/fonts/Monoton.astro';
import Poppins from '../components/fonts/Poppins.astro';
import Manrope from '../components/fonts/Manrope.astro';

interface Props {
	title: string;
}

const { title } = Astro.props;

---

<!doctype html>
<html lang="en" >
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<Monoton />
		<Poppins />
		<Manrope />

		<script is:inline>
			// ☝️ This script prevent the FART effect.
			if (localStorage.getItem("theme") === null) {
			  document.documentElement.setAttribute("data-theme", "retro");
			} else
				document.documentElement.setAttribute("data-theme",localStorage.getItem("theme"));

			// "theme" LocalStorage value is set by the package to remember user preference.
			// The value is checked and applyed before rendering anything.
		</script>

		<script>
			import { themeChange } from 'theme-change';
			themeChange();
		</script>

		<style>
			@view-transition {
				navigation: auto;
			}
		</style>
	</head>
	<body>
		<div id="main-content">
			<slot  />
		</div>
	</body>
</html>

<script is:inline>

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {

            if (entry.isIntersecting) {
                entry.target.classList.add('show')
				observer.unobserve(entry.target)
            } else {
                entry.target.classList.remove('show')
            }
        })
    })

    const entries = document.querySelectorAll('.scroll-animation')
    entries.forEach(entry => observer.observe(entry));
	
</script>